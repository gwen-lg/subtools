name: 'Individual Commits Check'
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  pull_request_target:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  push:
    branches:
      - '*'

jobs:
  check-comventional-commits:
    name: Check Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: webiny/action-conventional-commits@v1.3.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-push-commits:
    if: github.event_name == 'push'
    strategy:
      matrix:
        commit: ${{ github.event.commits }}

    name: "Check: ${{ matrix.commit.message }}"
    runs-on: ubuntu-latest
    steps:
      - name: "Install rust-toolchain stable"
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain : stable
          components: clippy, rustfmt

      - name: Install cargo-readme
        run: cargo install cargo-readme

      - name: "Show environment"
        run: |
          rustc -vV
          cargo -vV

      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.commit.id }}
          fetch-depth: 0

      - name: Check spelling of entire workspace
        if: $${{ always() }}
        uses: crate-ci/typos@master

      - name: Cargo fmt
        if: $${{ always() }}
        run: cargo fmt --check

      - name: Check if readme is up to date
        if: $${{ always() }}
        run: diff README.md <(cargo readme)

      - name: "Cargo doc"
        if: $${{ always() }}
        env:
          RUSTDOCFLAGS: "-D warnings"
        run: |
          cargo doc

      - name: Cargo clippy
        if: $${{ always() }}
        run: cargo clippy --profile=test

      - name: Cargo test
        run: cargo test

  check-pr-commits:
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        commit: ${{ github.event.pull_request.commits }}

    name: "Check: ${{ matrix.commit.message }}"
    runs-on: ubuntu-latest
    steps:
      - name: "Install rust-toolchain stable"
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain : stable
          components: clippy, rustfmt

      - name: "Show environment"
        run: |
          rustc -vV
          cargo -vV

      - name: Install cargo-readme
        run: cargo install cargo-readme

      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.commit.id }}
          fetch-depth: 0

      - name: "Typos: Check spelling of entire workspace"
        if: $${{ always() }}
        uses: crate-ci/typos@master

      - name: "Cargo fmt"
        if: $${{ always() }}
        run: cargo fmt --check

      - name: "Check if README.md is up to date"
        if: $${{ always() }}
        run: diff README.md <(cargo readme)

      - name: "Cargo doc"
        if: $${{ always() }}
        env:
          RUSTDOCFLAGS: "-D warnings"
        run: |
          cargo doc

      - name: "Cargo clippy"
        if: $${{ always() }}
        run: cargo clippy --profile=test

      - name: "Cargo test"
        run: cargo test
